{
    "openapi": "3.0.3",
    "info": {
        "title": "API documentation for team project QuizMaster",
        "description": "API documentation for QuizMaster backend [GitHub repository](https://github.com/AsphaltHedgehog/Banana-Plant)  \n\n\nThis application serves as a platform for creating and taking quizzes, offering an interactive space for users to assess their knowledge.\n\nThe project provides for the possibility of user registration, authentication and authorization. Users can create and pass and delete tests, filter them by category, view statistics and reviews.\n\nThe application has a friendly and clear user interface that allows you to conveniently and quickly perform all the necessary actions.\n\nThe project also ensures user security through password encryption and token-based identification.\n\n## Key Features:\n\n**User Registration and Authentication:** Securely manage user access and identification through registration and authentication processes.    \n**Quiz Management:** Create and delete quizzes  \n**Diverse Question Types:** Multiple Choice, True/False, etc.  \n**Quiz Taking:** Participants receive immediate scoring and have the option to leave feedback.  \n\n\n## Technology Stack:\n\n**Node.js:** JavaScript runtime environment on the server  \n**Express.js:** Framework for building web applications on Node.js  \n**MongoDB:** NoSQL database for storing quiz data  \n**Mongoose:** Library for interfacing with MongoDB in Node.js  \n**React.js:** Front-end library for creating user interfaces  \n**Redux:** State management library for React applications  ",
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "https://pigs.onrender.com/"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "User endpoints"
        },
        {
            "name": "Quizzes",
            "description": "Quizzes endpoints"
        },
        {
            "name": "Questions",
            "description": "Questions endpoints"
        },
        {
            "name": "Reviews",
            "description": "Reviews endpoints"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register new user",
                "description": "Register a new user account with the provided name, email, and password.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "### Description of request parameters:\n\n**name** - string, user name.\n\n**email** - string, user email. \n\n**password** - string, user password. \n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration. Returns the registered user's name, email and avatarURL automatically generated using Gravatar",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict. User with such email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorConflictResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign in existing user",
                "description": "Authenticate an existing user using their email and password.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "### Description of request parameters:\n\n**email** - string, user email. \n\n**password** - string, encrypted user password. \n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication and generation of authentication token. Returns an authentication token. Token is used to store the user's authorization state in the system, allowing users to make secure API requests. The token is a string of characters and is generated at each new user authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Incorrect email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "patch": {
                "tags": ["Auth"],
                "summary": "Log out user",
                "description": "Logs out the authenticated user by clearing the token associated with their session.",
                "parameters": [],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User signed out successfully"
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Bearer auth failed - invalid token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/resetPassword": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset Password",
                "description": "Resets the password for the user account and sends an email for password reset.",
                "requestBody": {
                    "description": "Email address of the user requesting a password reset",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequst"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message delivered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Status message indicating the success of the password reset request."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Message delivered"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error message indicating that the account associated with the provided email was not found."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Account not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/newPassword/{token}": {
            "patch": {
                "tags": ["Auth"],
                "summary": "Set a new password for the user's account.",
                "description": "Set a new password using the reset token received via email.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The unique token received in the password reset link.",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "New password for the user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewPasswordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. New password is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/info": {
            "get": {
                "tags": ["Users"],
                "summary": "Get user information",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "OK",
                                            "description": "Response status"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201,
                                            "description": "Response code"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserInfo"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "patch": {
                "tags": ["Users"],
                "summary": "Update user information.",
                "description": "Update information about the authenticated user.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Name",
                                        "description": "The new name of the user."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User information updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. User authentication failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/update/avatarURL": {
            "patch": {
                "tags": ["Users"],
                "summary": "Update user avatar URL",
                "description": "Uploads a new avatar image for the user and updates the avatar URL in the user profile.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userAvatar": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation. Avatar URL updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAvatarResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. User authentication failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/favorite": {
            "patch": {
                "tags": ["Users"],
                "summary": "Add or remove favorite item",
                "description": "Adds or removes a favorite quiz for the authenticated user.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "favoriteID": {
                                        "type": "string",
                                        "example": "65b9bbe690b27011571e122f",
                                        "description": "The ID of the quiz to add or remove from favorites."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Favorite item added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Status of the operation.",
                                            "example": "OK"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "description": "HTTP status code.",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message indicating the success of the operation.",
                                            "example": "User favorite successfully added"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Favorite item removed successfully."
                    },
                    "400": {
                        "description": "Bad Request. The request body is invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. User authentication failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz": {
            "get": {
                "tags": ["Quizzes"],
                "summary": "Get all quizzes.",
                "description": "Retrieve a list of all quizzes with pagination.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "description": "The page number for pagination."
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "description": "The number of items per page for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns a list of quizzes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuizListResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Quizzes"],
                "summary": "Add a new quiz.",
                "description": "Create a new quiz with specified theme, age group, categories, and background information.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme": {
                                        "type": "string",
                                        "description": "The theme of the quiz."
                                    },
                                    "ageGroup": {
                                        "type": "string",
                                        "enum": ["adult", "children"],
                                        "description": "The age group for which the quiz is intended."
                                    },
                                    "category": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "List of category IDs associated with the quiz."
                                    },
                                    "background": {
                                        "type": "string",
                                        "example": "none",
                                        "description": "Background information for the quiz."
                                    }
                                },
                                "required": ["theme", "ageGroup"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New quiz created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "theme": {
                                            "type": "string",
                                            "description": "The theme of the quiz."
                                        },
                                        "ageGroup": {
                                            "type": "string",
                                            "enum": ["adult", "children"],
                                            "description": "The age group for which the quiz is intended."
                                        },
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of category IDs associated with the quiz."
                                        },
                                        "background": {
                                            "type": "string",
                                            "example": "none",
                                            "description": "Background information for the quiz."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/rating": {
            "get": {
                "tags": ["Quizzes"],
                "summary": "Get all quizzes sorted by rating.",
                "responses": {
                    "200": {
                        "description": "A list of quizzes sorted by rating.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuizListResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/cat": {
            "get": {
                "tags": ["Quizzes"],
                "summary": "Get all quiz categories",
                "description": "Retrieve a list of all quiz categories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/category": {
            "get": {
                "tags": ["Quizzes"],
                "summary": "Get quizzes by category",
                "description": "Retrieve quizzes based on specified filters.\n\nOptionally provide additional filters:\n- `ageGroup` specifies the age group for which quizzes are requested\n- `page` and `pageSize` for pagination.\n- `rating` to filter quizzes by maximum rating.\n- `finished` to filter quizzes by maximum number of finished attempts.\n- `title` to filter quizzes by category titles. This can be a single string or an array of strings.\n- `favorites` to filter quizzes by favorite IDs.\n\nThe response contains a list of quizzes matching the specified criteria.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ageGroup",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Age group for filtering quizzes"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page for pagination"
                    },
                    {
                        "in": "query",
                        "name": "rating",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Maximum rating for filtering quizzes"
                    },
                    {
                        "in": "query",
                        "name": "finished",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Maximum finished count for filtering quizzes"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Title of the category to filter quizzes by"
                    },
                    {
                        "in": "query",
                        "name": "favorites",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Array of favorite quiz IDs"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuizzesByCategoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/{id}": {
            "get": {
                "tags": ["Quizzes"],
                "summary": "Get a quiz by ID.",
                "description": "Retrieve a quiz by its unique identifier.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "description": "The ID of the quiz to fetch."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A quiz object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Quiz"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Quizzes"],
                "summary": "Update a quiz by ID.",
                "description": "Update an existing quiz by its   ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "description": "The ID of the quiz to update."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme": {
                                        "type": "string",
                                        "description": "The updated theme of the quiz."
                                    },
                                    "ageGroup": {
                                        "type": "string",
                                        "enum": ["adult", "children"],
                                        "description": "The updated age group for the quiz."
                                    },
                                    "category": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "List of updated category IDs associated with the quiz."
                                    },
                                    "background": {
                                        "type": "string",
                                        "description": "Updated background information for the quiz."
                                    }
                                },
                                "example": {
                                    "theme": "Updated Theme",
                                    "ageGroup": "children",
                                    "category": ["65b9b74a0af6ce975d97ee53"],
                                    "background": "Updated background info"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated quiz object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Quiz"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Quizzes"],
                "summary": "Delete a quiz by ID.",
                "description": "Delete an existing quiz by its ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "description": "The ID of the quiz to delete."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Quiz deleted successfully."
                    },
                    "400": {
                        "description": "Invalid quiz ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/question/{id}": {
            "post": {
                "tags": ["Questions"],
                "summary": "Add a new quiz question",
                "description": "Add a new quiz question to a specific quiz by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz to which the question belongs.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddQuizQuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz question successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuizQuestionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Questions"],
                "summary": "Get all questions for a quiz",
                "description": "Retrieve all questions associated with a specific quiz ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the quiz to retrieve questions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request. Questions for the specified quiz are returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuizQuestionsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Questions"],
                "summary": "Update a quiz question by ID",
                "description": "Update a quiz question data by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz question to be updated.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "description": "An array of answer descriptions.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "description": "Description of the answer."
                                                }
                                            }
                                        }
                                    },
                                    "validAnswerIndex": {
                                        "type": "number",
                                        "description": "Index of the valid answer in the 'answers' array."
                                    }
                                },
                                "example": {
                                    "answers": [
                                        {
                                            "descr": "Option 1"
                                        },
                                        {
                                            "descr": "Option 2"
                                        },
                                        {
                                            "descr": "Option 3"
                                        },
                                        {
                                            "descr": "Option 4"
                                        }
                                    ],
                                    "validAnswerIndex": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns the updated quiz question.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "The ID of the updated quiz question."
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "60f38c49e6e81c0015a7f7f1"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid ID format or other request issues.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Questions"],
                "summary": "Delete a quiz question by ID",
                "description": "Delete a quiz question by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz question to be deleted.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful deletion.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Question deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid quiz ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                },
                                "example": {
                                    "message": "Invalid quiz ID"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/question/img/{id}": {
            "patch": {
                "tags": ["Questions"],
                "summary": "Update image of a quiz question",
                "description": "Update the image associated with a specific quiz question by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz question to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "questionPoster": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Image updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuizQuestionImageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                },
                                "example": {
                                    "message": "Quiz question not found"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Questions"],
                "summary": "Delete the image associated with a quiz question",
                "description": "Delete the image associated with a quiz question by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the quiz question which image have to be deleted.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content. Image deleted successfully."
                    },
                    "400": {
                        "description": "Bad Request. Invalid quiz ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                },
                                "example": {
                                    "message": "Invalid quiz ID"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question or image not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                },
                                "example": {
                                    "message": "Quiz question not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/getReviews": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get reviews",
                "description": "Retrieve a list of reviews with pagination.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number for pagination (default is 1).",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of reviews per page (default is 6).",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/{id}/addReview": {
            "post": {
                "tags": ["Reviews"],
                "summary": "Add a review to a quiz",
                "description": "Add a new review to the quiz.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the quiz",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "The name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "The rating given in the review.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "query",
                        "description": "The content of the review.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Review added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddReviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "alex@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "alex"
                    }
                },
                "required": ["name", "email", "password"]
            },
            "RegisterResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email",
                        "format": "email",
                        "example": "alex@gmail.com"
                    },
                    "avatarURL": {
                        "type": "string",
                        "description": "URL to user avatar",
                        "example": "//www.gravatar.com/avatar/8ac60021f7a220624d9613d24631b62d"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "alex@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "alex"
                    }
                },
                "required": ["email", "password"]
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
                    }
                },
                "required": ["token"]
            },
            "ResetPasswordRequst": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address associated with the user's account.",
                        "example": "alex@gmail.com"
                    }
                },
                "required": ["email"]
            },
            "ResetPasswordResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Status message indicating the success of the password reset request."
                    }
                }
            },
            "NewPasswordRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "example": "newPassword",
                        "description": "New password to be set for the user's account."
                    }
                },
                "required": ["password"]
            },
            "NewPasswordResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Status message indicating the success of the password reset.",
                        "example": "Message delivered"
                    }
                }
            },
            "UserInfo": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65c3bde2fc20d0414000fa4b",
                        "description": "The unique identifier of the user."
                    },
                    "name": {
                        "type": "string",
                        "example": "userName",
                        "description": "The name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user."
                    },
                    "favorite": {
                        "type": "array",
                        "description": "The favorite items of the user.",
                        "items": {
                            "type": "string",
                            "example": "favoriteItem1"
                        }
                    }
                }
            },
            "UpdateAvatarResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the response.",
                        "example": "OK"
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code of the response.",
                        "example": 201
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "The unique identifier of the user."
                            },
                            "avatarURL": {
                                "type": "string",
                                "description": "The URL of the updated user avatar."
                            }
                        }
                    }
                }
            },
            "Quiz": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the quiz."
                    },
                    "theme": {
                        "type": "string",
                        "description": "The theme of the quiz."
                    },
                    "category": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The categories associated with the quiz."
                    },
                    "background": {
                        "type": "string",
                        "description": "The background of the quiz."
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "The age group targeted by the quiz."
                    },
                    "ratingQuantity": {
                        "type": "integer",
                        "description": "The number of ratings received by the quiz."
                    },
                    "rating": {
                        "type": "number",
                        "description": "The rating of the quiz."
                    },
                    "finished": {
                        "type": "number",
                        "description": "The number of times the quiz has been completed."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp indicating when the quiz was created."
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp indicating when the quiz was last updated."
                    }
                },
                "example": {
                    "_id": "65b9bc98193936430e4f2e4d",
                    "theme": "Комікси",
                    "category": ["65b9b74a0af6ce975d97ee53"],
                    "background": "none",
                    "ageGroup": "children",
                    "ratingQuantity": 84,
                    "rating": 3.9,
                    "finished": 165
                }
            },
            "QuizListResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/QuizArray",
                        "description": "A list of quizzes."
                    },
                    "totalQuizes": {
                        "type": "integer",
                        "description": "The total number of quizzes."
                    }
                },
                "example": {
                    "result": [
                        {
                            "_id": "65b9bc98193936430e4f2e4d",
                            "theme": "Комікси",
                            "category": ["65b9b74a0af6ce975d97ee53"],
                            "background": "none",
                            "ageGroup": "children",
                            "ratingQuantity": 84,
                            "rating": 3.9,
                            "finished": 165
                        },
                        {
                            "_id": "65b9bcad8ce630a714a30e4e",
                            "theme": "Професії",
                            "category": ["65b9b74a0af6ce975d97ee4f"],
                            "background": "none",
                            "ageGroup": "children",
                            "ratingQuantity": 79,
                            "rating": 4.7,
                            "finished": 118
                        }
                    ],
                    "totalQuizes": 2
                }
            },
            "QuizArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Quiz"
                },
                "description": "A list of quizzes."
            },
            "QuizCategory": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the quiz category."
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "The age group of the quiz category."
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the quiz category."
                    }
                },
                "example": {
                    "_id": "65b9bc98193936430e4f2e4d",
                    "ageGroup": "children",
                    "title": "Comics"
                }
            },
            "CategoryList": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the response.",
                        "example": "OK"
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code of the response.",
                        "example": 200
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "required": ["status", "code", "data"]
            },
            "Category": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the category."
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "The age group associated with the category."
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the category."
                    }
                },
                "required": ["_id", "ageGroup", "title"]
            },
            "QuizzesByCategoryResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the response.",
                        "example": "OK"
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code of the response",
                        "example": "200"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Quiz"
                                },
                                "description": "List of quizzes matching the criteria"
                            },
                            "category": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Category"
                                },
                                "description": "List of categories matching the age group"
                            },
                            "total": {
                                "type": "integer",
                                "example": "totalResult",
                                "description": "Total number of quizzes in the specified age group"
                            }
                        }
                    }
                },
                "required": ["status", "code", "data"]
            },
            "AddQuizQuestionRequest": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "time to answer questions",
                        "example": "00:45"
                    },
                    "description": {
                        "type": "string",
                        "description": "text question of the test",
                        "example": "Яка іграшка складається з кольорових кубиків, які можна збирати в різні фігури?"
                    },
                    "answers": {
                        "type": "array",
                        "description": "options for answering questions",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Description of the answer option"
                                }
                            }
                        },
                        "example": [
                            {
                                "descr": "Пазли"
                            },
                            {
                                "descr": "Кукла"
                            },
                            {
                                "descr": "Лего"
                            },
                            {
                                "descr": "Автомобільчик"
                            }
                        ]
                    },
                    "validAnswer": {
                        "type": "string",
                        "description": "correct answer option",
                        "example": "65b9bbe690b27011571e1233"
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "image URL",
                        "example": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "'full-text' or 'true-or-false'",
                        "example": "true-or-false",
                        "enum": ["full-text", "true-or-false"]
                    }
                }
            },
            "QuizQuestionsResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "OK"
                    },
                    "code": {
                        "type": "integer",
                        "example": "200"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Question"
                        }
                    }
                }
            },
            "Question": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the question."
                    },
                    "quiz": {
                        "type": "string",
                        "description": "The ID of the quiz this question belongs to."
                    },
                    "time": {
                        "type": "string",
                        "description": "The time for answering this question."
                    },
                    "descr": {
                        "type": "string",
                        "description": "The description of the question."
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Answer"
                        },
                        "description": "The array of possible answers for the question."
                    },
                    "validAnswer": {
                        "type": "string",
                        "description": "The ID of the valid answer for this question."
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the image for the question"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["full-text", "true-or-false"],
                        "description": "The type of question, either 'full-text' or 'true-or-false'."
                    }
                }
            },
            "Answer": {
                "type": "object",
                "properties": {
                    "descr": {
                        "type": "string",
                        "description": "The description or text of the answer."
                    }
                }
            },
            "QuizQuestionResponse": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "time to answer questions",
                        "example": "00:45"
                    },
                    "description": {
                        "type": "string",
                        "description": "text question of the test",
                        "example": "Яка іграшка складається з кольорових кубиків, які можна збирати в різні фігури?"
                    },
                    "answers": {
                        "type": "array",
                        "description": "options for answering questions",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Description of the answer option"
                                }
                            }
                        },
                        "example": [
                            {
                                "descr": "Пазли"
                            },
                            {
                                "descr": "Кукла"
                            },
                            {
                                "descr": "Лего"
                            },
                            {
                                "descr": "Автомобільчик"
                            }
                        ]
                    },
                    "validAnswer": {
                        "type": "string",
                        "description": "correct answer option",
                        "example": "65b9bbe690b27011571e1233"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "image URL",
                        "example": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "'full-text' or 'true-or-false'",
                        "example": "true-or-false",
                        "enum": ["full-text", "true-or-false"]
                    }
                }
            },
            "QuizQuestionImageResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The ID of the updated quiz question."
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the updated image associated with the quiz question."
                    }
                }
            },
            "ReviewsResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the response."
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code of the response."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Review"
                        }
                    }
                }
            },
            "AddReviewResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the response.",
                        "example": "OK"
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code of the response.",
                        "example": 201
                    },
                    "data": {
                        "$ref": "#/components/schemas/Review"
                    }
                }
            },
            "Review": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier."
                    },
                    "userName": {
                        "type": "string",
                        "description": "The name of the user who left the review."
                    },
                    "avatarUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the user's avatar image."
                    },
                    "review": {
                        "type": "string",
                        "description": "The text of the review."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the review was created."
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the review was last updated."
                    }
                }
            },
            "errorBadRequestResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Bad request"
                    }
                }
            },
            "errorUnauthorizedResponse": {
                "type": "object",
                "description": "Unauthorized access error.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Unauthorized"
                    }
                }
            },
            "errorNotFoundResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Not Found"
                    }
                }
            },
            "errorConflictResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message indicating a conflict.",
                        "example": "Email already in use"
                    }
                }
            }
        }
    }
}
