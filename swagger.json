{
    "openapi": "3.0.3",
    "info": {
        "title": "API documentation for project QuizMaster",
        "description": "API documentation for QuizMaster backend [GitHub repository](https://github.com/AsphaltHedgehog/Banana-Plant)  \n\n\nThis application serves as a platform for creating and taking quizzes, offering an interactive space for users to assess their knowledge.\n\nThe project provides for the possibility of user registration, authentication and authorization. Users can create and pass and delete tests, filter them by category, view statistics and reviews.\n\nThe application has a friendly and clear user interface that allows you to conveniently and quickly perform all the necessary actions.\n\nThe project also ensures user security through password encryption and token-based identification.\n\n## Key Features:\n\n**User Registration and Authentication:** Securely manage user access and identification through registration and authentication processes.    \n**Quiz Management:** Create and delete quizzes  \n**Diverse Question Types:** Multiple Choice, True/False, etc.  \n**Quiz Taking:** Participants receive immediate scoring and have the option to leave feedback.  \n\n\n## Technology Stack:\n\n**Node.js:** JavaScript runtime environment on the server  \n**Express.js:** Framework for building web applications on Node.js  \n**MongoDB:** NoSQL database for storing quiz data  \n**Mongoose:** Library for interfacing with MongoDB in Node.js  \n**React.js:** Front-end library for creating user interfaces  \n**Redux:** State management library for React applications  ",
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "https://pigs.onrender.com/"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "User endpoints"
        },
        {
            "name": "Reviews",
            "description": "Reviews endpoints"
        },
        {
            "name": "Quizzes",
            "description": "Quizzes endpoints"
        },
        {
            "name": "Questions",
            "description": "Questions endpoints"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": ["Auth"],
                "operationId": "register",
                "summary": "Register new user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "# Description of request parameters:\n\n**name** - string, user name.\n\n**email** - string, user email. \n\n**password** - string, encrypted user password. \n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "### Successful registration\n**name** - string, user name.\n**email** - string, user email.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User with such email already exists"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Auth"],
                "operationId": "login",
                "summary": "Sign in existing user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "# Description of request parameters:\n\n**email** - string, user email. \n\n**password** - string, encrypted user password. \n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "### Created session for existing user\n**token** - string, token is used to store the user's authorization state in the system, allowing users to make secure API requests. The token is a string of characters and is generated at each new user authorization.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect email or password"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "patch": {
                "tags": ["Auth"],
                "operationId": "logout",
                "summary": "Log out user",
                "parameters": [],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User signed out"
                    },
                    "401": {
                        "description": "Bearer auth failed - invalid token. If the request does not contain a valid token or the token has already expired, the server will return a response with HTTP status code 401 Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/resetPassword": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset Password",
                "description": "Request to reset the user's password.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message delivered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Status message indicating the success of the password reset request."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Message delivered"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error message indicating that the account associated with the provided email was not found."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Account not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/newPassword/{token}": {
            "post": {
                "tags": ["Auth"],
                "summary": "Set a new password for the user's account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The unique token received in the password reset link.",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewPasswordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorBadRequestResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quiz/question": {
            "post": {
                "operationId": "postQuestion",
                "summary": "adding a test question to the collection",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "# Description of request parameters:\n\n**time** - string, time to answer questions\n\n**description** - string, text question of the test\n\n**answers** - array, options for answering questions\n\n**validAnswer** - string, correct answer option;\n            \n**imageUrl** - string\n\n**type:** - 'full-text' or 'true-or-false'\n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuizQuestionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "### Quiz question successfully created\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuizQuestionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Bad request"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "A description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthorized"
                                }
                            }
                        }
                    }
                },
                "tags": ["Questions"]
            }
        },
        "/api/quiz/question/{id}": {
            "patch": {
                "summary": "Update a quiz question by ID",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update a quiz question data by ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz question to be updated.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "description": "An array of answer descriptions.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "descr": {
                                                    "type": "string",
                                                    "description": "Description of the answer."
                                                }
                                            }
                                        }
                                    },
                                    "validAnswerIndex": {
                                        "type": "number",
                                        "description": "Index of the valid answer in the 'answers' array."
                                    }
                                },
                                "example": {
                                    "answers": [
                                        {
                                            "descr": "Option 1"
                                        },
                                        {
                                            "descr": "Option 2"
                                        },
                                        {
                                            "descr": "Option 3"
                                        },
                                        {
                                            "descr": "Option 4"
                                        }
                                    ],
                                    "validAnswerIndex": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns the updated quiz question.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "The ID of the updated quiz question."
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "60f38c49e6e81c0015a7f7f1"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid ID format or other request issues.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Bad Request"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Not found"
                                }
                            }
                        }
                    }
                },
                "tags": ["Questions"]
            },
            "delete": {
                "summary": "Delete a quiz question by ID",
                "description": "Delete a quiz question by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The ID of the quiz question to be deleted.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful deletion.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Quiz deleted successfully"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid ID format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Invalid quiz ID"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Quiz not found"
                                }
                            }
                        }
                    }
                },
                "tags": ["Questions"]
            }
        },
        "/api/quiz/question/img/{id}": {
            "delete": {
                "summary": "Delete the image associated with a quiz question",
                "description": "Delete the image associated with a quiz question by ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the quiz question which image have to be deleted.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "60f38c49e6e81c0015a7f7f2"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content. Image deleted successfully."
                    },
                    "400": {
                        "description": "Bad Request. Invalid quiz ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Invalid quiz ID"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Quiz question or image not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Description of the error."
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Quiz question not found"
                                }
                            }
                        }
                    }
                },
                "tags": ["Questions"]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RegisterDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "example": "alex@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "alex"
                    }
                },
                "required": ["name", "email", "password"]
            },
            "RegisterResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "example": "alex@gmail.com"
                    }
                }
            },
            "LoginDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "alex@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "alex"
                    }
                },
                "required": ["email", "password"]
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
                    }
                },
                "required": ["token"]
            },
            "ResetPasswordDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address associated with the user's account.",
                        "example": "alex@gmail.com"
                    }
                },
                "required": ["email"]
            },
            "ResetPasswordResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Status message indicating the success of the password reset request."
                    }
                }
            },
            "NewPasswordRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "example": "newPassword",
                        "description": "New password to be set for the user's account."
                    }
                },
                "required": ["password"]
            },
            "NewPasswordResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Status message indicating the success of the password reset.",
                        "example": "Message delivered"
                    }
                }
            },
            "QuizQuestionDto": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "time to answer questions",
                        "example": "00:45"
                    },
                    "description": {
                        "type": "string",
                        "description": "text question of the test",
                        "example": "Яка іграшка складається з кольорових кубиків, які можна збирати в різні фігури?"
                    },
                    "answers": {
                        "type": "array",
                        "description": "options for answering questions",
                        "example": [
                            {
                                "descr": "Пазли"
                            },
                            {
                                "descr": "Кукла"
                            },
                            {
                                "descr": "Лего"
                            },
                            {
                                "descr": "Автомобільчик"
                            }
                        ]
                    },
                    "validAnswer": {
                        "type": "string",
                        "description": "correct answer option",
                        "example": "65b9bbe690b27011571e1233"
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "image URL",
                        "example": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "'full-text' or 'true-or-false'",
                        "example": "true-or-false",
                        "enum": ["full-text", "true-or-false"]
                    }
                }
            },
            "QuizQuestionResponse": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "time to answer questions",
                        "example": "00:45"
                    },
                    "description": {
                        "type": "string",
                        "description": "text question of the test",
                        "example": "Яка іграшка складається з кольорових кубиків, які можна збирати в різні фігури?"
                    },
                    "answers": {
                        "type": "array",
                        "description": "options for answering questions",
                        "example": [
                            {
                                "descr": "Пазли"
                            },
                            {
                                "descr": "Кукла"
                            },
                            {
                                "descr": "Лего"
                            },
                            {
                                "descr": "Автомобільчик"
                            }
                        ]
                    },
                    "validAnswer": {
                        "type": "string",
                        "description": "correct answer option",
                        "example": "65b9bbe690b27011571e1233"
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "image URL",
                        "example": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "'full-text' or 'true-or-false'",
                        "example": "true-or-false",
                        "enum": ["full-text", "true-or-false"]
                    }
                }
            },
            "errorBadRequestResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer",
                        "description": "Error status code",
                        "example": "400"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Bad request"
                    }
                }
            }
        }
    }
}
